{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\Submit\\\\RJS301x_1.0-A_VN\\\\Lab\\\\Lab 18.1\\\\Lab 18.1\\\\src\\\\components\\\\quotes\\\\QuoteList.jsx\",\n  _s = $RefreshSig$();\nimport classes from \"./QuoteList.module.css\";\nimport { useLoaderData, useSearchParams, useNavigate } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuoteList() {\n  _s();\n  let ordinal = 1;\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const data = useLoaderData();\n  const allQuote = data ? Object.values(data) : null;\n  const sort = searchParams.get(\"sort\");\n  if (allQuote) {\n    ordinal = sort === \"asc\" || sort === \"\" ? 1 : allQuote.length;\n    sort === \"asc\" || sort === \"\" || allQuote.reverse();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          sort === \"asc\" ? setSearchParams({\n            sort: \"desc\"\n          }) : setSearchParams({\n            sort: \"asc\"\n          });\n        },\n        children: [\"Sort \", sort === \"asc\" ? \"Descending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), allQuote && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: allQuote.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        ordinal: sort === \"asc\" || sort === \"\" ? ordinal++ : ordinal--,\n        quoteData: quote\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(QuoteList, \"CMJvP3EVy0h7+1nG2MGA902nulw=\", false, function () {\n  return [useNavigate, useSearchParams, useLoaderData];\n});\n_c = QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["classes","useLoaderData","useSearchParams","useNavigate","QuoteItem","jsxDEV","_jsxDEV","Fragment","_Fragment","QuoteList","_s","ordinal","navigate","searchParams","setSearchParams","data","allQuote","Object","values","sort","get","length","reverse","children","className","sorting","onClick","fileName","_jsxFileName","lineNumber","columnNumber","list","map","quote","quoteData","id","_c","$RefreshReg$"],"sources":["D:/WORK/Submit/RJS301x_1.0-A_VN/Lab/Lab 18.1/Lab 18.1/src/components/quotes/QuoteList.jsx"],"sourcesContent":["import classes from \"./QuoteList.module.css\";\r\nimport { useLoaderData, useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport QuoteItem from \"./QuoteItem\";\r\nexport default function QuoteList() {\r\n  let ordinal = 1;\r\n\r\n  const navigate = useNavigate();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const data = useLoaderData();\r\n  const allQuote = data ? Object.values(data) : null;\r\n\r\n  const sort = searchParams.get(\"sort\");\r\n  if (allQuote) {\r\n    ordinal = sort === \"asc\" || sort === \"\" ? 1 : allQuote.length;\r\n    sort === \"asc\" || sort === \"\" || allQuote.reverse();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.sorting}>\r\n        {\" \"}\r\n        <button\r\n          onClick={() => {\r\n            sort === \"asc\"\r\n              ? setSearchParams({ sort: \"desc\" })\r\n              : setSearchParams({ sort: \"asc\" });\r\n          }}\r\n        >\r\n          Sort {sort === \"asc\" ? \"Descending\" : \"Ascending\"}\r\n        </button>\r\n      </div>\r\n      {allQuote && (\r\n        <ul className={classes.list}>\r\n          {allQuote.map((quote) => (\r\n            <QuoteItem\r\n              ordinal={sort === \"asc\" || sort === \"\" ? ordinal++ : ordinal--}\r\n              quoteData={quote}\r\n              key={quote.id}\r\n            ></QuoteItem>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,SAASC,aAAa,EAAEC,eAAe,EAAEC,WAAW,QAAQ,kBAAkB;AAC9E,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACpC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,IAAIC,OAAO,GAAG,CAAC;EAEf,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGZ,eAAe,CAAC,CAAC;EAEzD,MAAMa,IAAI,GAAGd,aAAa,CAAC,CAAC;EAC5B,MAAMe,QAAQ,GAAGD,IAAI,GAAGE,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC,GAAG,IAAI;EAElD,MAAMI,IAAI,GAAGN,YAAY,CAACO,GAAG,CAAC,MAAM,CAAC;EACrC,IAAIJ,QAAQ,EAAE;IACZL,OAAO,GAAGQ,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,EAAE,GAAG,CAAC,GAAGH,QAAQ,CAACK,MAAM;IAC7DF,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,EAAE,IAAIH,QAAQ,CAACM,OAAO,CAAC,CAAC;EACrD;EAEA,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAKkB,SAAS,EAAExB,OAAO,CAACyB,OAAQ;MAAAF,QAAA,GAC7B,GAAG,eACJjB,OAAA;QACEoB,OAAO,EAAEA,CAAA,KAAM;UACbP,IAAI,KAAK,KAAK,GACVL,eAAe,CAAC;YAAEK,IAAI,EAAE;UAAO,CAAC,CAAC,GACjCL,eAAe,CAAC;YAAEK,IAAI,EAAE;UAAM,CAAC,CAAC;QACtC,CAAE;QAAAI,QAAA,GACH,OACM,EAACJ,IAAI,KAAK,KAAK,GAAG,YAAY,GAAG,WAAW;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLd,QAAQ,iBACPV,OAAA;MAAIkB,SAAS,EAAExB,OAAO,CAAC+B,IAAK;MAAAR,QAAA,EACzBP,QAAQ,CAACgB,GAAG,CAAEC,KAAK,iBAClB3B,OAAA,CAACF,SAAS;QACRO,OAAO,EAAEQ,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,EAAE,GAAGR,OAAO,EAAE,GAAGA,OAAO,EAAG;QAC/DuB,SAAS,EAAED;MAAM,GACZA,KAAK,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA,eACD,CAAC;AAEP;AAACpB,EAAA,CA1CuBD,SAAS;EAAA,QAGdN,WAAW,EACYD,eAAe,EAE1CD,aAAa;AAAA;AAAAmC,EAAA,GANJ3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}